# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
    "ohci_pci"
    "ehci_pci"
    "pata_amd"
    "ahci"
    "usb_storage"
    "sd_mod"
    "sr_mod"
    "sdhci_pci"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [
    "kvm-amd"
    "wl"
  ];

  # Looking at the CVE summary, I think it is worth the risk to enable this.
  # Besides, this has a hardware switch!
  nixpkgs.config.permittedInsecurePackages = [
    "broadcom-sta-6.30.223.271-57-6.12.40"
  ];

  boot.extraModulePackages = [ config.boot.kernelPackages.broadcom_sta ];

  # fix failing to wake after suspend (by disabling it)
  systemd.sleep.extraConfig = ''
    AllowSuspend=no
    AllowHibernation=no
    AllowHybridSleep=no
    AllowSuspendThenHibernate=no
  '';

  # Should help performance when swapping
  boot.kernel.mg-lru.enable = true;

  # Reduce swapping
  boot.kernel.sysctl = {
    "vm.swappiness" = 10;
  };

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/82cb0c70-0f2a-47b7-b3b9-c7e9ced930fb";
    fsType = "ext4";
    # This is a slow HDD...
    # options = [ "noatime" ];
  };

  boot.initrd.luks.devices."nixos" = {
    device = "/dev/disk/by-uuid/08633f4f-e738-436d-a6bc-6bec7bf0e355";
    preLVM = true;
  };

  swapDevices = [
    { device = "/dev/disk/by-uuid/5139fc53-8b64-4e2f-b68b-77e62d6a52eb"; }
  ];

  fileSystems."/var/tmp" = {
    device = "tmpfs";
    fsType = "tmpfs";
    options = [ "size=4G" ];
  };

  boot.tmp = {
    useTmpfs = true;
    tmpfsSize = "300%";
    cleanOnBoot = true;
  };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s10.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s2f1u1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
